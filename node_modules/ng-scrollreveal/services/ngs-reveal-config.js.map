{"version":3,"file":"ngs-reveal-config.js","sourceRoot":"","sources":["../../services/ngs-reveal-config.ts"],"names":[],"mappings":"OAAO,EAAE,UAAU,EAAE,MAAM,eAAe;AAE1C;;;;GAIG;AAEH;IAAA;QACI,mCAAmC;QACnC,WAAM,GAAyC,QAAQ,CAAC;QAExD,kEAAkE;QAClE,aAAQ,GAAG,MAAM,CAAC;QAElB,wBAAwB;QACxB,aAAQ,GAAG,GAAG,CAAC;QACf,UAAK,GAAG,CAAC,CAAC;QAEV,kFAAkF;QAClF,WAAM,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;QAE9B,wEAAwE;QACxE,YAAO,GAAG,CAAC,CAAC;QAEZ,6DAA6D;QAC7D,UAAK,GAAG,GAAG,CAAC;QAEZ,2EAA2E;QAC3E,WAAM,GAAG,gCAAgC,CAAC;QAO1C,qDAAqD;QACrD,WAAM,GAAG,IAAI,CAAC;QAEd,0DAA0D;QAC1D,uDAAuD;QACvD,UAAK,GAAG,KAAK,CAAC;QAEd,6CAA6C;QAC7C,qDAAqD;QACrD,+DAA+D;QAC/D,aAAQ,GAAkC,QAAQ,CAAC;QAEnD,0EAA0E;QAC1E,2EAA2E;QAC3E,eAAU,GAAG,GAAG,CAAC;QAEjB,oDAAoD;QACpD,iEAAiE;QACjE,KAAK;QACL,+DAA+D;QAC/D,eAAU,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC;IAO1D,CAAC;IANM,0BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,8BAAc,GAA6D,EACjF,CAAC;IACF,sBAAC;AAAD,CAAC,AAvDD,IAuDC","sourcesContent":["import { Injectable } from '@angular/core';\n\n/**\n * Configuration service for the NgScrollReveal directives.\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the ngsReveal directives used in the application.\n */\n\nexport class NgsRevealConfig {\n    // 'bottom', 'left', 'top', 'right'\n    origin?: 'bottom' | 'left' | 'top' | 'right' = 'bottom';\n\n    // Can be any valid CSS distance, e.g. '5rem', '10%', '20vw', etc.\n    distance?= '20px';\n\n    // Time in milliseconds.\n    duration?= 500;\n    delay?= 0;\n\n    // Starting angles in degrees, will transition from these values to 0 in all axes.\n    rotate?= { x: 0, y: 0, z: 0 };\n\n    // Starting opacity value, before transitioning to the computed opacity.\n    opacity?= 0;\n\n    // Starting scale value, will transition from this value to 1\n    scale?= 0.9;\n\n    // Accepts any valid CSS easing, e.g. 'ease', 'ease-in-out', 'linear', etc.\n    easing?= 'cubic-bezier(0.6, 0.2, 0.1, 1)';\n\n    // `<html>` is the default reveal container. You can pass either:\n    // DOM Node, e.g. document.querySelector('.fooContainer')\n    // Selector, e.g. '.fooContainer'\n    container?: Element | string;\n\n    // true/false to control reveal animations on mobile.\n    mobile?= true;\n\n    // true:  reveals occur every time elements become visible\n    // false: reveals occur once as elements become visible\n    reset?= false;\n\n    // 'always' — delay for all reveal animations\n    // 'once'   — delay only the first time reveals occur\n    // 'onload' - delay only for animations triggered by first load\n    useDelay?: 'always' | 'once' | 'onload' = 'always';\n\n    // Change when an element is considered in the viewport. The default value\n    // of 0.20 means 20% of an element must be visible for its reveal to occur.\n    viewFactor?= 0.2;\n\n    // Pixel values that alter the container boundaries.\n    // e.g. Set `{ top: 48 }`, if you have a 48px tall fixed toolbar.\n    // --\n    // Visual Aid: https://scrollrevealjs.org/assets/viewoffset.png\n    viewOffset?= { top: 0, right: 0, bottom: 0, left: 0 };\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}