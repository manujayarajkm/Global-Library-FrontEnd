import { Injectable } from '@angular/core';
/**
 * Configuration service for the NgScrollReveal directives.
 * You can inject this service, typically in your root component, and customize the values of its properties in
 * order to provide default values for all the ngsReveal directives used in the application.
 */
export var NgsRevealConfig = (function () {
    function NgsRevealConfig() {
        // 'bottom', 'left', 'top', 'right'
        this.origin = 'bottom';
        // Can be any valid CSS distance, e.g. '5rem', '10%', '20vw', etc.
        this.distance = '20px';
        // Time in milliseconds.
        this.duration = 500;
        this.delay = 0;
        // Starting angles in degrees, will transition from these values to 0 in all axes.
        this.rotate = { x: 0, y: 0, z: 0 };
        // Starting opacity value, before transitioning to the computed opacity.
        this.opacity = 0;
        // Starting scale value, will transition from this value to 1
        this.scale = 0.9;
        // Accepts any valid CSS easing, e.g. 'ease', 'ease-in-out', 'linear', etc.
        this.easing = 'cubic-bezier(0.6, 0.2, 0.1, 1)';
        // true/false to control reveal animations on mobile.
        this.mobile = true;
        // true:  reveals occur every time elements become visible
        // false: reveals occur once as elements become visible
        this.reset = false;
        // 'always' — delay for all reveal animations
        // 'once'   — delay only the first time reveals occur
        // 'onload' - delay only for animations triggered by first load
        this.useDelay = 'always';
        // Change when an element is considered in the viewport. The default value
        // of 0.20 means 20% of an element must be visible for its reveal to occur.
        this.viewFactor = 0.2;
        // Pixel values that alter the container boundaries.
        // e.g. Set `{ top: 48 }`, if you have a 48px tall fixed toolbar.
        // --
        // Visual Aid: https://scrollrevealjs.org/assets/viewoffset.png
        this.viewOffset = { top: 0, right: 0, bottom: 0, left: 0 };
    }
    NgsRevealConfig.decorators = [
        { type: Injectable },
    ];
    /** @nocollapse */
    NgsRevealConfig.ctorParameters = [];
    return NgsRevealConfig;
}());
//# sourceMappingURL=ngs-reveal-config.js.map