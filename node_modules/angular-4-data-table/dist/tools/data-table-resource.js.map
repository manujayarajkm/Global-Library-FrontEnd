{"version":3,"file":"data-table-resource.js","sourceRoot":"","sources":["file:///D:/projects/angular-4-data-table/src/tools/data-table-resource.ts"],"names":[],"mappings":";AAGA;IAEI,2BAAoB,KAAU;QAAV,UAAK,GAAL,KAAK,CAAK;IAAG,CAAC;IAElC,iCAAK,GAAL,UAAM,MAAuB,EAAE,MAAwD;QAEnF,IAAI,MAAM,GAAQ,EAAE,CAAC;QACrB,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACT,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACvC,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,mEAAmE;QACpG,CAAC;QAED,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;YAChB,MAAM,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC;gBACb,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC;oBACvC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC5D,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;gBAC/C,CAAC;YACL,CAAC,CAAC,CAAC;YACH,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,MAAM,CAAC,OAAO,EAAE,CAAC;YACrB,CAAC;QACL,CAAC;QACD,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC;YAC9B,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC;gBAC7B,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;YACxD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;YACvE,CAAC;QACL,CAAC;QAED,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,UAAU,CAAC,cAAM,OAAA,OAAO,CAAC,MAAM,CAAC,EAAf,CAAe,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,iCAAK,GAAL;QAAA,iBAKC;QAJG,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,UAAU,CAAC,cAAM,OAAA,OAAO,CAAC,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAA1B,CAA0B,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;IAEP,CAAC;IACL,wBAAC;AAAD,CAAC,AA5CD,IA4CC;AA5CY,8CAAiB","sourcesContent":["import { DataTableParams } from '../types/data-table-params.type';\r\n\r\n\r\nexport class DataTableResource<T> {\r\n\r\n    constructor(private items: T[]) {}\r\n\r\n    query(params: DataTableParams, filter?: (item: T, index: number, items: T[]) => boolean): Promise<T[]> {\r\n\r\n        let result: T[] = [];\r\n        if (filter) {\r\n            result = this.items.filter(filter);\r\n        } else {\r\n            result = this.items.slice(); // shallow copy to use for sorting instead of changing the original\r\n        }\r\n\r\n        if (params.sortBy) {\r\n            result.sort((a, b) => {\r\n                if (typeof a[params.sortBy] === 'string') {\r\n                    return a[params.sortBy].localeCompare(b[params.sortBy]);\r\n                } else {\r\n                    return a[params.sortBy] - b[params.sortBy];\r\n                }\r\n            });\r\n            if (params.sortAsc === false) {\r\n                result.reverse();\r\n            }\r\n        }\r\n        if (params.offset !== undefined) {\r\n            if (params.limit === undefined) {\r\n                result = result.slice(params.offset, result.length);\r\n            } else {\r\n                result = result.slice(params.offset, params.offset + params.limit);\r\n            }\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => resolve(result));\r\n        });\r\n    }\r\n\r\n    count(): Promise<number> {\r\n        return new Promise((resolve, reject) => {\r\n            setTimeout(() => resolve(this.items.length));\r\n        });\r\n\r\n    }\r\n}\r\n"]}