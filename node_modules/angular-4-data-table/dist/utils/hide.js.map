{"version":3,"file":"hide.js","sourceRoot":"","sources":["file:///D:/projects/angular-4-data-table/src/utils/hide.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,sCAAgE;AAGhE,iBAAiB,GAAQ;IACvB,MAAM,CAAC,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,IAAI,CAAC;AAC3C,CAAC;AAGD,IAAa,IAAI;IAKf,cAAoB,WAAuB,EAAU,SAAmB;QAApD,gBAAW,GAAX,WAAW,CAAY;QAAU,cAAS,GAAT,SAAS,CAAU;QAHhE,mBAAc,GAAY,IAAI,CAAC;IAGqC,CAAC;IAE7E,sBAAI,sBAAI;aAAR,UAAS,YAAqB;YAC5B,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAExB,EAAE,CAAC,CAAC,YAAY,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;gBAC3E,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;gBAC3B,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;YACpF,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,YAAY,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;gBAClF,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;gBAC5B,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;YAChG,CAAC;QACH,CAAC;;;OAAA;IAEO,+BAAgB,GAAxB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,KAAK,SAAS,CAAC,CAAC,CAAC;YACrC,IAAI,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,CAAC;YAChE,EAAE,CAAC,CAAC,YAAY,IAAI,YAAY,KAAK,MAAM,CAAC,CAAC,CAAC;gBAC5C,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;YACpC,CAAC;QACH,CAAC;IACH,CAAC;IACH,WAAC;AAAD,CAAC,AA3BD,IA2BC;AA3BY,IAAI;IADhB,gBAAS,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;qCAMjB,iBAAU,EAAqB,eAAQ;GAL7D,IAAI,CA2BhB;AA3BY,oBAAI","sourcesContent":["import { Directive, ElementRef, Renderer } from '@angular/core';\r\n\r\n\r\nfunction isBlank(obj: any): boolean {\r\n  return obj === undefined || obj === null;\r\n}\r\n\r\n@Directive({ selector: '[hide]', inputs: ['hide'] })\r\nexport class Hide {\r\n\r\n  private _prevCondition: boolean = null;\r\n  private _displayStyle: string;\r\n\r\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer) { }\r\n\r\n  set hide(newCondition: boolean) {\r\n    this.initDisplayStyle();\r\n\r\n    if (newCondition && (isBlank(this._prevCondition) || !this._prevCondition)) {\r\n      this._prevCondition = true;\r\n      this._renderer.setElementStyle(this._elementRef.nativeElement, 'display', 'none');\r\n    } else if (!newCondition && (isBlank(this._prevCondition) || this._prevCondition)) {\r\n      this._prevCondition = false;\r\n      this._renderer.setElementStyle(this._elementRef.nativeElement, 'display', this._displayStyle);\r\n    }\r\n  }\r\n\r\n  private initDisplayStyle() {\r\n    if (this._displayStyle === undefined) {\r\n      let displayStyle = this._elementRef.nativeElement.style.display;\r\n      if (displayStyle && displayStyle !== 'none') {\r\n        this._displayStyle = displayStyle;\r\n      }\r\n    }\r\n  }\r\n}\r\n"]}