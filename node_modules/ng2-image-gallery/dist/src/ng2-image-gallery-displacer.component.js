var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { Component, Directive, TemplateRef, ViewContainerRef, ViewChild, Inject, forwardRef } from '@angular/core';
import { TemplatePortal, OverlayConfig, Overlay } from '@angular/material';
var DisplacerPortalDirective = (function (_super) {
    __extends(DisplacerPortalDirective, _super);
    function DisplacerPortalDirective(templateRef, viewContainerRef) {
        return _super.call(this, templateRef, viewContainerRef) || this;
    }
    return DisplacerPortalDirective;
}(TemplatePortal));
export { DisplacerPortalDirective };
DisplacerPortalDirective.decorators = [
    { type: Directive, args: [{ selector: '[displacerPortal]' },] },
];
/** @nocollapse */
DisplacerPortalDirective.ctorParameters = function () { return [
    { type: TemplateRef, decorators: [{ type: Inject, args: [forwardRef(function () { return TemplateRef; }),] },] },
    { type: ViewContainerRef, decorators: [{ type: Inject, args: [forwardRef(function () { return ViewContainerRef; }),] },] },
]; };
var DisplacerComponent = (function () {
    function DisplacerComponent(_overlay) {
        this._overlay = _overlay;
        this._config = new OverlayConfig();
        this._overlayRef = undefined;
    }
    DisplacerComponent.prototype.ngOnDestroy = function () {
        this._overlayRef.detach();
    };
    DisplacerComponent.prototype.ngAfterViewInit = function () {
        this._overlayRef = this._overlay.create(this._config);
        this._overlayRef.attach(this._portal);
    };
    return DisplacerComponent;
}());
export { DisplacerComponent };
DisplacerComponent.decorators = [
    { type: Component, args: [{
                selector: 'to-body-displacer',
                template: "<ng-template displacerPortal>\n  <ng-content></ng-content>\n  </ng-template>"
            },] },
];
/** @nocollapse */
DisplacerComponent.ctorParameters = function () { return [
    { type: Overlay, decorators: [{ type: Inject, args: [forwardRef(function () { return Overlay; }),] },] },
]; };
DisplacerComponent.propDecorators = {
    '_portal': [{ type: ViewChild, args: [DisplacerPortalDirective,] },],
};
//# sourceMappingURL=ng2-image-gallery-displacer.component.js.map