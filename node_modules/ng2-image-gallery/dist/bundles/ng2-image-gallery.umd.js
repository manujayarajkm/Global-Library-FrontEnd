(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('ng2-dragula'), require('@angular/common'), require('@angular/material')) :
	typeof define === 'function' && define.amd ? define(['exports', '@angular/core', 'ng2-dragula', '@angular/common', '@angular/material'], factory) :
	(factory((global['ng2-image-gallery'] = global['ng2-image-gallery'] || {}),global.ng.core,global.ng2Dragula,global.ng.common,global.ng.material));
}(this, (function (exports,_angular_core,ng2Dragula,_angular_common,_angular_material) { 'use strict';

var Ng2ImageGalleryComponent = (function () {
    function Ng2ImageGalleryComponent(dragulaService) {
        var _this = this;
        this.dragulaService = dragulaService;
        this.images = [];
        this.draggable = false;
        this.asImage = "image";
        this.asThumbnail = "thumbnail";
        this.asText = "text";
        this.actionText = "";
        this.actionEmitter = new _angular_core.EventEmitter();
        this.dropEmitter = new _angular_core.EventEmitter();
        this.loading = false;
        this.curImageIndex = 0;
        this.curThumbnailIndex = 0;
        this.isLightboxOpen = false;
        dragulaService.drop.subscribe(function (value) {
            _this.onDrop(value.slice(1));
        });
    }
    Ng2ImageGalleryComponent.prototype.ngOnChanges = function (changes) {
        if (changes.images) {
            this.images = changes.images.currentValue;
        }
    };
    Ng2ImageGalleryComponent.prototype.openLightboxGallery = function (index) {
        var _this = this;
        this.isLightboxOpen = true;
        setTimeout(function () {
            _this.curImageIndex = index - 1;
            _this.nextImage();
            _this.loading = false;
        }, 0);
    };
    Ng2ImageGalleryComponent.prototype.closeLightboxGallery = function () {
        this.isLightboxOpen = false;
    };
    Ng2ImageGalleryComponent.prototype.nextImage = function () {
        if (this.curImageIndex !== this.images.length - 1) {
            this.loading = true;
            this.curImageIndex++;
            this.curThumbnailIndex = this.curImageIndex;
        }
    };
    Ng2ImageGalleryComponent.prototype.previousImage = function () {
        this.loading = true;
        if (this.curImageIndex !== 0) {
            this.curImageIndex--;
        }
        this.curThumbnailIndex = this.curImageIndex;
    };
    Ng2ImageGalleryComponent.prototype.toImage = function (index) {
        this.loading = true;
        this.curImageIndex = index;
        this.curThumbnailIndex = this.curImageIndex;
    };
    Ng2ImageGalleryComponent.prototype.thumbnailsNext = function () {
        if (this.curThumbnailIndex + 5 < this.images.length) {
            this.curThumbnailIndex += 5;
        }
        else {
            this.curThumbnailIndex = this.images.length - 1;
        }
        this.curThumbnailIndex += 5;
    };
    Ng2ImageGalleryComponent.prototype.thumbnailsPrevious = function () {
        if (this.curThumbnailIndex - 5 > 0) {
            this.curThumbnailIndex -= 5;
        }
        else {
            this.curThumbnailIndex = 0;
        }
    };
    Ng2ImageGalleryComponent.prototype.onLoad = function () {
        this.loading = false;
    };
    Ng2ImageGalleryComponent.prototype.onAction = function (image) {
        this.actionEmitter.emit({
            image: image
        });
    };
    Ng2ImageGalleryComponent.prototype.onDrop = function (args) {
        var e = args[0], el = args[1];
        this.dropEmitter.emit({
            images: this.images
        });
    };
    return Ng2ImageGalleryComponent;
}());
Ng2ImageGalleryComponent.decorators = [
    { type: _angular_core.Component, args: [{
                selector: 'ng2-image-gallery',
                template: "\n    <div class=\"ng2-image-gallery-thumbnails\" *ngIf=\"!draggable\">\n        <div *ngFor=\"let image of images; let index=index\" class=\"ng2-image-gallery-thumbnail-container\">\n            <img [src]=\"image[asThumbnail]\" (click)=\"openLightboxGallery(index)\" class=\"ng2-image-gallery-thumbnail\">\n            <button class=\"btn btn-primary ng2-image-gallery-action\" *ngIf=\"actionText!==''\" (click)=\"onAction(image)\" [innerHTML]=\"actionText\"></button>\n        </div>\n    </div>\n    <div class=\"ng2-image-gallery-thumbnails\" [dragula]=\"'ng2-image-gallery-bag'\" [dragulaModel]='images' *ngIf=\"draggable\">\n        <div *ngFor=\"let image of images; let index=index\" class=\"ng2-image-gallery-thumbnail-container\">\n            <img [src]=\"image[asThumbnail]\" (click)=\"openLightboxGallery(index)\" class=\"ng2-image-gallery-thumbnail\">\n            <button class=\"btn btn-primary ng2-image-gallery-action\" *ngIf=\"actionText!==''\" (click)=\"onAction(image)\" [innerHTML]=\"actionText\"></button>\n        </div>\n    </div>\n    <to-body-displacer>\n        <div class=\"ng2-image-gallery-overlay\" [hidden]=\"!isLightboxOpen\">\n            <div class=\"ng2-image-gallery-lightbox\">\n                <a class=\"ng2-igl-close\" (click)=\"closeLightboxGallery()\"><i class=\"fa fa-close\"></i></a>\n                <a class=\"ng2-igl-nav-left\" *ngIf=\"images.length >1 && curImageIndex!==0\" (click)=\"previousImage()\"><i class=\"fa fa-angle-left\"></i></a>\n                <img [hidden]=\"loading\" *ngIf=\"images.length>0\" [src]=\"images[curImageIndex][asImage]\" (click)=\"nextImage()\" class=\"ng2-igl-img\" (load)=\"onLoad()\" />\n                <span [hidden]=\"!loading\" *ngIf=\"images.length>0\" class=\"ng2-igl-loading\"><i class=\"fa fa-spinner fa-spin fa-3x\" aria-hidden=\"true\"></i></span>\n                <a class=\"ng2-igl-nav-right\" *ngIf=\"images.length >1 && curImageIndex!==images.length-1\" (click)=\"nextImage()\"><i class=\"fa fa-angle-right\"></i></a>\n                <span class=\"ng2-igl-text\" *ngIf=\"images.length>0\" [innerHTML]=\"images[curImageIndex][asText]\"></span>\n                <span class=\"ng2-igl-count\">{{curImageIndex+1}}/{{images.length}}</span>\n                <div class=\"ng2-igl-thumbnails\">\n                    <a class=\"ng2-igl-nav-left thumbnails\" [ngClass]=\"{'non-visible': curThumbnailIndex < 4 }\" (click)=\"thumbnailsPrevious()\"><i class=\"fa fa-angle-left\"></i></a>\n                    <ng-template ngFor let-image [ngForOf]=\"images\" let-index=\"index\">\n                        <img [src]=\"image[asThumbnail]\" (click)=\"toImage(index)\" \n                            *ngIf=\"(curThumbnailIndex>images.length-4 && index > images.length-8)||(curThumbnailIndex<4 && index < 7)||(index >= curThumbnailIndex -3) && (index <= curThumbnailIndex+3)\"\n                            [ngClass]=\"{'active':curImageIndex===index}\"\n                            class=\"ng2-igl-thumbnail rounded-circle\">\n                    </ng-template>\n                    <a class=\"ng2-igl-nav-right thumbnails\" [ngClass]=\"{'non-visible': curThumbnailIndex > images.length-5 }\" (click)=\"thumbnailsNext()\"><i class=\"fa fa-angle-right\"></i></a>\n                </div>\n            </div>\n        </div>\n    </to-body-displacer>"
            },] },
];
/** @nocollapse */
Ng2ImageGalleryComponent.ctorParameters = function () { return [
    { type: ng2Dragula.DragulaService, decorators: [{ type: _angular_core.Inject, args: [_angular_core.forwardRef(function () { return ng2Dragula.DragulaService; }),] },] },
]; };
Ng2ImageGalleryComponent.propDecorators = {
    'images': [{ type: _angular_core.Input },],
    'draggable': [{ type: _angular_core.Input, args: ['draggable',] },],
    'asImage': [{ type: _angular_core.Input, args: ['asImage',] },],
    'asThumbnail': [{ type: _angular_core.Input, args: ['asThumbnail',] },],
    'asText': [{ type: _angular_core.Input, args: ['asText',] },],
    'actionText': [{ type: _angular_core.Input, args: ['actionText',] },],
    'actionEmitter': [{ type: _angular_core.Output, args: ['onAction',] },],
    'dropEmitter': [{ type: _angular_core.Output, args: ['onDrop',] },],
};

var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var DisplacerPortalDirective = (function (_super) {
    __extends(DisplacerPortalDirective, _super);
    function DisplacerPortalDirective(templateRef, viewContainerRef) {
        return _super.call(this, templateRef, viewContainerRef) || this;
    }
    return DisplacerPortalDirective;
}(_angular_material.TemplatePortal));
DisplacerPortalDirective.decorators = [
    { type: _angular_core.Directive, args: [{ selector: '[displacerPortal]' },] },
];
/** @nocollapse */
DisplacerPortalDirective.ctorParameters = function () { return [
    { type: _angular_core.TemplateRef, decorators: [{ type: _angular_core.Inject, args: [_angular_core.forwardRef(function () { return _angular_core.TemplateRef; }),] },] },
    { type: _angular_core.ViewContainerRef, decorators: [{ type: _angular_core.Inject, args: [_angular_core.forwardRef(function () { return _angular_core.ViewContainerRef; }),] },] },
]; };
var DisplacerComponent = (function () {
    function DisplacerComponent(_overlay) {
        this._overlay = _overlay;
        this._config = new _angular_material.OverlayConfig();
        this._overlayRef = undefined;
    }
    DisplacerComponent.prototype.ngOnDestroy = function () {
        this._overlayRef.detach();
    };
    DisplacerComponent.prototype.ngAfterViewInit = function () {
        this._overlayRef = this._overlay.create(this._config);
        this._overlayRef.attach(this._portal);
    };
    return DisplacerComponent;
}());
DisplacerComponent.decorators = [
    { type: _angular_core.Component, args: [{
                selector: 'to-body-displacer',
                template: "<ng-template displacerPortal>\n  <ng-content></ng-content>\n  </ng-template>"
            },] },
];
/** @nocollapse */
DisplacerComponent.ctorParameters = function () { return [
    { type: _angular_material.Overlay, decorators: [{ type: _angular_core.Inject, args: [_angular_core.forwardRef(function () { return _angular_material.Overlay; }),] },] },
]; };
DisplacerComponent.propDecorators = {
    '_portal': [{ type: _angular_core.ViewChild, args: [DisplacerPortalDirective,] },],
};

var Ng2ImageGalleryModule = (function () {
    function Ng2ImageGalleryModule() {
    }
    return Ng2ImageGalleryModule;
}());
Ng2ImageGalleryModule.decorators = [
    { type: _angular_core.NgModule, args: [{
                imports: [
                    _angular_common.CommonModule,
                    ng2Dragula.DragulaModule,
                    _angular_material.PortalModule,
                    _angular_material.OverlayModule
                ],
                declarations: [
                    DisplacerPortalDirective,
                    DisplacerComponent,
                    Ng2ImageGalleryComponent
                ],
                exports: [
                    Ng2ImageGalleryComponent
                ]
            },] },
];
/** @nocollapse */
Ng2ImageGalleryModule.ctorParameters = function () { return []; };

exports.Ng2ImageGalleryComponent = Ng2ImageGalleryComponent;
exports.Ng2ImageGalleryModule = Ng2ImageGalleryModule;
exports.DisplacerComponent = DisplacerComponent;
exports.DisplacerPortalDirective = DisplacerPortalDirective;

Object.defineProperty(exports, '__esModule', { value: true });

})));
