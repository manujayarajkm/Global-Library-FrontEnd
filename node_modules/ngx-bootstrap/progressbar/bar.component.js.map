{"version":3,"sources":["../../.tmp/progressbar/bar.component.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,IAAI,EACJ,WAAW,EACX,KAAK,EAGN,MAAM,eAAA,CAAgB;AAEvB,OAAO,EAAE,iBAAA,EAAkB,MAAO,sBAAA,CAAuB;AACzD,OAAO,EAAE,KAAA,EAAM,MAAO,yBAAA,CAA0B;AAEhD,oBAAoB;AACpB,iCAAiC;AAEjC;IAqCE,sBAAa,QAA2B;QANxC,YAAO,GAAG,CAAC,CAAC;QAOV,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IA/BD,sBAAI,+BAAK;QAFT,oCAAoC;aAEpC;YACE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC;aAED,UAAU,CAAS;YACjB,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAClB,MAAM,CAAC;YACT,CAAC;YACD,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YAChB,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC/B,CAAC;;;OARA;IAWD,sBAAI,qCAAW;aAAf;YACE,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAE7B,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC;QACxC,CAAC;;;OAAA;IAED,sBAAI,+BAAK;aAAT;YACE,MAAM,CAAC,KAAK,EAAE,CAAC;QACjB,CAAC;;;OAAA;IAYD,+BAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAED,kCAAW,GAAX;QACE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IAED,4CAAqB,GAArB;QACE,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAElE,IAAM,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI;aACvC,MAAM,CAAC,UAAU,KAAa,EAAE,GAAiB;YAChD,MAAM,CAAC,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC;QAC7B,CAAC,EAAE,CAAC,CAAC,CAAC;QAER,EAAE,CAAC,CAAC,eAAe,GAAG,GAAG,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,OAAO,IAAI,eAAe,GAAG,GAAG,CAAC;QACxC,CAAC;IACH,CAAC;IACI,uBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,KAAK;oBACf,QAAQ,EAAE,qZAAqZ;iBACha,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,2BAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,iBAAiB,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,EAAG,EAAC;KACxD,EAF6F,CAE7F,CAAC;IACK,2BAAc,GAA2C;QAChE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC1B,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC3B,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,eAAe,EAAG,EAAE,EAAE;KACjE,CAAC;IACF,mBAAC;CA5ED,AA4EC,IAAA;SA5EY,YAAY","file":"bar.component.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  Host,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit\n} from '@angular/core';\n\nimport { ProgressDirective } from './progress.directive';\nimport { isBs3 } from '../utils/theme-provider';\n\n// todo: number pipe\n// todo: use query from progress?\n\nexport class BarComponent implements OnInit, OnDestroy {\n  max: number;\n\n  /** provide one of the four supported contextual classes: `success`, `info`, `warning`, `danger` */\n   type: string;\n\n  /** current value of progress bar */\n  \n  get value(): number {\n    return this._value;\n  }\n\n  set value(v: number) {\n    if (!v && v !== 0) {\n      return;\n    }\n    this._value = v;\n    this.recalculatePercentage();\n  }\n\n  \n  get setBarWidth() {\n    this.recalculatePercentage();\n\n    return this.isBs3 ? '' : this.percent;\n  }\n\n  get isBs3(): boolean {\n    return isBs3();\n  }\n\n  percent = 0;\n  transition: string;\n  progress: ProgressDirective;\n\n  protected _value: number;\n\n  constructor( progress: ProgressDirective) {\n    this.progress = progress;\n  }\n\n  ngOnInit(): void {\n    this.progress.addBar(this);\n  }\n\n  ngOnDestroy(): void {\n    this.progress.removeBar(this);\n  }\n\n  recalculatePercentage(): void {\n    this.percent = +(this.value / this.progress.max * 100).toFixed(2);\n\n    const totalPercentage = this.progress.bars\n      .reduce(function (total: number, bar: BarComponent): number {\n        return total + bar.percent;\n      }, 0);\n\n    if (totalPercentage > 100) {\n      this.percent -= totalPercentage - 100;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'bar',\n  template: \"<div class=\\\"progress-bar\\\" style=\\\"min-width: 0;\\\" role=\\\"progressbar\\\" [ngClass]=\\\"type && 'progress-bar-' + type + ' bg-' + type\\\" [ngStyle]=\\\"{width: (isBs3 ? (percent < 100 ? percent : 100) + '%' : '100%'), transition: transition}\\\" aria-valuemin=\\\"0\\\" [attr.aria-valuenow]=\\\"value\\\" [attr.aria-valuetext]=\\\"percent.toFixed(0) + '%'\\\" [attr.aria-valuemax]=\\\"max\\\"> <ng-content></ng-content> </div> \"\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ProgressDirective, decorators: [{ type: Host }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'type': [{ type: Input },],\n'value': [{ type: Input },],\n'setBarWidth': [{ type: HostBinding, args: ['style.width.%', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}