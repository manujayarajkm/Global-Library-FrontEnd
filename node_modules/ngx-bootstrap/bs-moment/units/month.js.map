{"version":3,"sources":["../../../.tmp/bs-moment/units/month.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,qBAAqB,CAAC;AACrD,OAAO,EAAE,UAAU,EAAE,MAAM,QAAQ,CAAC;AAEpC,OAAO,EAAE,GAAG,EAAE,MAAM,UAAU,CAAC;AAC/B,OAAO,EAAE,QAAQ,EAAE,MAAM,uBAAuB,CAAC;AAEjD,MAAM,sBAAsB,IAAY,EAAE,KAAa;IACrD,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,GAAG,CAAC;IACb,CAAC;IACD,IAAM,QAAQ,GAAG,GAAG,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;IAChC,IAAI,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC;IAEhC,MAAM,CAAC,QAAQ,KAAK,CAAC;UACjB,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE;UAC1B,EAAE,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AAC9B,CAAC;AAED,aAAa;AAEb,cAAc,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,UACnC,IAAU,EACV,MAAc;IAEd,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;AACzC,CAAC,CAAC,CAAC;AAEH,cAAc,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,UAChC,IAAU,EACV,MAAc,EACd,MAAe;IAEf,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,MAAM,CAAW,CAAC;AACpD,CAAC,CAAC,CAAC;AAEH,cAAc,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,UACjC,IAAU,EACV,MAAc,EACd,MAAe;IAEf,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAW,CAAC;AAC/C,CAAC,CAAC,CAAC","file":"month.js","sourceRoot":"","sourcesContent":["import { addFormatToken } from '../format-functions';\nimport { isLeapYear } from './year';\nimport { Locale } from '../locale/locale.class';\nimport { mod } from '../utils';\nimport { getMonth } from '../utils/date-getters';\n\nexport function daysInMonth(year: number, month: number): number {\n  if (isNaN(year) || isNaN(month)) {\n    return NaN;\n  }\n  const modMonth = mod(month, 12);\n  year += (month - modMonth) / 12;\n\n  return modMonth === 1\n    ? isLeapYear(year) ? 29 : 28\n    : 31 - (modMonth % 7) % 2;\n}\n\n// FORMATTING\n\naddFormatToken('M', ['MM', 2], 'Mo', function(\n  date: Date,\n  format: string\n): string {\n  return (getMonth(date) + 1).toString();\n});\n\naddFormatToken('MMM', null, null, function(\n  date: Date,\n  format: string,\n  locale?: Locale\n): string {\n  return locale.monthsShort(date, format) as string;\n});\n\naddFormatToken('MMMM', null, null, function(\n  date: Date,\n  format: string,\n  locale?: Locale\n): string {\n  return locale.months(date, format) as string;\n});\n"]}